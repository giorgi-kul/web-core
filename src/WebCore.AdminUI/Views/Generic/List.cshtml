@model WebCore.Domain.Models.Admin.AdminListModel
@{
    Layout = "~/Views/_Layout.cshtml";
}

<nav class="page-breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#">Forms</a></li>
        <li class="breadcrumb-item active" aria-current="page">Basic Elements</li>
    </ol>
</nav>

<div class="row">
    <div class="col-md-12">
        <vc:alert-message></vc:alert-message>
    </div>

    @if (Model.CreateEnabled)
    {
        <div class="col-md-12">
            <a href="" class="btn btn-primary mb-3"></a>
        </div>
    }

    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                @foreach (var item in Model.Properties)
                                {
                                    if (item.Settings.IsListVisible)
                                    {
                                        <th>@item.GetPropertyName()</th>
                                    }
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Items)
                            {
                                <tr>

                                    @foreach (var prop in Model.Properties)
                                    {
                                        if (prop.Settings.IsListVisible)
                                        {
                                            <td>
                                                @if (prop.Settings.RelatedModuleType != null)
                                                {
                                                    ModuleEntity val = prop.Property.GetValue(item) as ModuleEntity;
                                                    if (val != null)
                                                    {
                                                        @*if (prop.Settings.IsRelatedModuleMultilang)
                                                            {
                                                                @Model.GetMultilangValue(val.Title)
                                                            }
                                                            else
                                                            {*@
                                                        @val.Title
                                                        //}
                                                    }
                                                }
                                                else
                                                {
                                                    @prop.Property.GetValue(item)
                                                    @*if (prop.Settings.IsMultilang)
                                                        {
                                                            @Model.GetMultilangValue(prop.Property.GetValue(item) as string)
                                                        }
                                                        else
                                                        {
                                                            @prop.Property.GetValue(item)
                                                        }*@
                                                }
                                            </td>
                                        }
                                    }

                                    <td class="text-right" style="min-width: 60px;vertical-align: middle;">
                                        <div class="btn-group btn-group-toggle btn-group-sm" data-toggle="buttons">
                                            @if (Model.DetailsEnabled)
                                            {
                                                <vc:generic-button action="details" controller="@ViewContext.RouteData.Values["controller"].ToString()" id="@item.Id" button-class="btn btn-secondary btn-icon" icon-class="file-text"></vc:generic-button>
                                            }

                                            @if (Model.EditEnabled)
                                            {
                                                <vc:generic-button action="edit" controller="@ViewContext.RouteData.Values["controller"].ToString()" id="@item.Id" button-class="btn btn-primary btn-icon" icon-class="edit"></vc:generic-button>
                                            }

                                            @if (Model.DeleteEnabled)
                                            {
                                                <vc:generic-button action="" controller="" id="@item.Id" button-class="btn btn-danger btn-icon" icon-class="trash"></vc:generic-button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <vc:pager shown-page-number="5" , total-items="@Model.TotalCount" items-per-page="@Model.ItemsPerPage"></vc:pager>
    </div>
</div>